@model TMS.Models.TaskTable

@{
    ViewBag.Title = "Delete";
}


<div class="jumbotron">


    <div class="card text-center">

        <div class="card-body">

            <div class=" table-responsive">

                <hr />

                <table class="table table-striped display expandable-table" style="width:100%">
                    <thead>
                        <tr>
                            <th scope="col">  @Html.DisplayNameFor(model => model.TaskName)</th>
                            <th scope="col">     @Html.DisplayNameFor(model => model.FeedBack)</th>
                            <th scope="col"> @Html.DisplayNameFor(model => model.BodyContent)</th>
                            <th scope="col">   @Html.DisplayNameFor(model => model.TaskStatus)</th>
                            <th scope="col"> @Html.DisplayNameFor(model => model.TastStartTime)</th>
                            <th scope="col">  @Html.DisplayNameFor(model => model.TaskEndTime)</th>
                            <th scope="col">    @Html.DisplayNameFor(model => model.UnitTable.UnitName)</th>
                            <th scope="col">    @Html.DisplayNameFor(model => model.UsersTable.Username)</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td scope="col">  @Html.DisplayFor(model => model.TaskName)</td>
                            <td scope="col">     @Html.DisplayFor(model => model.FeedBack)</td>
                            <td scope="col"> @Html.DisplayFor(model => model.BodyContent)</td>

                            <td scope="col">
                                @if (Model.TaskStatus == true)
                                {
                                    <button class=" btn badge-success">@Html.DisplayFor(model => model.TaskStatus) Completed</button>
                                }
                                else
                                {
                                    <button class="btn badge-warning text-white">@Html.DisplayFor(model => model.TaskStatus) Pending </button>
                                }
                            </td>
                            <td scope="col"> @Html.DisplayFor(model => model.TastStartTime)</td>
                            <td scope="col">  @Html.DisplayFor(model => model.TaskEndTime)</td>
                            <td scope="col">    @Html.DisplayFor(model => model.UnitTable.UnitName)</td>
                            <td scope="col">    @Html.DisplayFor(model => model.UsersTable.Username)</td>

                        </tr>

                    </tbody>
                </table>

            </div>



        </div>
        <div class="card-footer text-muted">
            <div class="card-header">
                <h3>Are you sure you want to delete this?</h3>

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-actions no-color">
                        <input type="submit" value="Delete" class="btn btn-danger" />
                        @if (Session["userId"] != null)
                        {
                            if (Session["urserrole"].Equals(1))
                            {
                                <a class="btn btn-outline-primary" href=" @Url.Action("Mytask", "Tasks")"> View Changes</a>


                            }
                            else
                            {
                                <a class="btn btn-outline-primary" href=" @Url.Action("Index", "Tasks")"> BACK</a>

                            }
                        }
                        else
                        {
                            <p class="text-danger"> SESSION NOT SET</p>
                        }

                    </div>
                }

            </div>
        </div>
    </div>




</div>



