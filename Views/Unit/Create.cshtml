@model TMS.Models.UnitTable

@{
    ViewBag.Title = "Create";
}


@if (Session["urserrole"].Equals(2) || Session["urserrole"].Equals(5))
{
    if (ViewBag.unitexitxt != null)
    {
        <div class="card text-center  mt-100">
            <div class="card-header bg-danger text-white">Notification</div>
            <div class="card-body">
                <h5 class="card-title">NOT AUTHORISED</h5>
                <p class="card-text">  access denied</p>


            </div>
            <div class="card-footer text-muted"> <a href="@Url.Action("Index", "Home")" class="btn btn-outline-primary text-black"> <i class="fa-solid fa-house-circle-check"></i></a></div>
        </div>
    }
    else
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()


            <div class="row">
                <div class="col-md-6 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <div class="form-horizontal">
                                <h6 class="text-red"> create units while following numbering of the units in their order</h6>
                                <hr />

                                @Html.ValidationMessage("unitidexixtx", new { @class = "text-danger" })

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.UnitId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.UnitId, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.UnitId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.UnitName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.UnitName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.UnitName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Save" class="btn btn-primary" />
                                        <a class="btn btn-outline-primary" href=" @Url.Action("Index", "Unit" )"> View Changes</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <div class="ml-xl-4 mt-3">
                                <p class="card-title"></p>
                                <img src="~/App_Start/images/activities/roles.jpg" class="img-fluid" style="width:100%" />

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }




}
else
{
    <div class="card text-center  mt-100">
        <div class="card-header bg-danger text-white">Notification</div>
        <div class="card-body">
            <h5 class="card-title">NOT AUTHORISED</h5>
            <p class="card-text">  access denied</p>


        </div>
        <div class="card-footer text-muted"> <a href="@Url.Action("Index", "Home")" class="btn btn-outline-primary text-black"> <i class="fa-solid fa-house-circle-check"></i></a></div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



