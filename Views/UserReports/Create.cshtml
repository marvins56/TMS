@model TMS.Models.UserReportsTable

@{
    ViewBag.Title = "Create";
}
<div id="resultLoading" style="display: none; width: 100%; height: 100%; position: fixed; z-index: 10000; top: 0px; left: 0px; right: 0px; bottom: 0px; margin: auto;">
    <div style="width: 340px; height: 200px; text-align: center; position: fixed; top: 0px; left: 0px; right: 0px; bottom: 0px; margin: auto; z-index: 10; color: rgb(255, 255, 255);">
        <div class="uil-default-css">
            <div class="loader">Loading...</div>
        </div>
        <div class="resultLoading" style="display: block; font-size: 18px; font-weight: 300;">&nbsp;</div>
    </div>
    <div style="background: rgb(0, 0, 0); opacity: 0.6; width: 100%; height: 100%; position: absolute; top: 0px;"></div>
</div>
@{
    if (ViewBag.upload == null)
    {
        using (Html.BeginForm("Create", "UserReports", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-md-6 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <div class="form-horizontal">
                                <h4>REPORT SUBMISSION</h4>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Userid, "Userid", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("Userid", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Userid, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.TaskId, "TaskId", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("TaskId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.TaskId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-10">
                                        @*@Html.EditorFor(model => model.Report, new { htmlAttributes = new { @class = "form-control", Type = "file", name = "reportfile" } })*@
                                        @Html.ValidationMessageFor(model => model.Report, "", new { @class = "text-danger" })
                                        @*@Html.TextBox("reportfile", "", new { Type = "File", @class = "form-control form-control-lg"})*@
                                        <input type="file" name="reportfile" />
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-outline-primary" />


                                        <a class="btn btn-outline-primary" href=" @Url.Action("Myreports", "UserReports")"> View Changes</a>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <div class="ml-xl-4 mt-3">
                                <p class="card-title"></p>
                                <img src="~/App_Start/images/activities/todo.jpg" class="img-fluid" style="width:100%" />

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }


    }
    else
    {
        <div class="card text-center  mt-100">
            <div class="card-header bg-success text-white">Notification</div>
            <div class="card-body">
                <h5 class="card-title ">hurray!</h5>
                <p class="card-text">  @ViewBag.upload</p>



            </div>
            <div class="card-footer text-muted "> <a href="#" class="btn btn-outline-primary text-black">@ViewBag.upload</a></div>
        </div>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}










