@model TMS.Models.GeneralToDoListTable

@{
    ViewBag.Title = "Edit";
}



<div class="jumbotron text-center">
    <h1 class="display-4"> EDIT A TODOLIST</h1>
    <p class="lead ">edit Todolist task task </p>
</div>

<div class="row">
    <div class="col-md-6 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">TODO LIST TASK</h4>
                <p class="card-description">
                    Edit to your Task List
                </p>

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>GeneralToDoListTable</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ToDoId)

                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName, "UserName", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("UserName", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TaskName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TaskName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TaskFeedBack, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TaskFeedBack, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TaskFeedBack, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TaskId, "TaskId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TaskId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TaskId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.UnitId, "UnitId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("UnitId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.UnitId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                       
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsTaskComplete, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsTaskComplete)
                                    @Html.ValidationMessageFor(model => model.IsTaskComplete, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CompletionDate, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CompletionDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CompletionDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-primary" />

                                @if (Session["userId"] != null)
                                {
                                    if (Session["userId"].Equals(1))
                                    {
                                        <a class="btn btn-outline-primary" href=" @Url.Action("MyToDo", "GeneralToDoList")"> View Changes</a>

                                    }
                                    else
                                    {
                                        <a class="btn btn-outline-primary" href=" @Url.Action("Index", "GeneralToDoList")"> View Changes</a>

                                    }
                                }
                                else
                                {
                                    <p class="text-danger"> SESSION NOT SET</p>
                                }

                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-md-6 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="ml-xl-4 mt-3">
                    <p class="card-title"></p>
                    <img src="~/App_Start/images/activities/todox.jpg" class="img-fluid" style="width:100%" />

                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
