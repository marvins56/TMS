@model IEnumerable<TMS.Models.TaskTable>

<div id="resultLoading" style="display: none; width: 100%; height: 100%; position: fixed; z-index: 10000; top: 0px; left: 0px; right: 0px; bottom: 0px; margin: auto;">
    <div style="width: 340px; height: 200px; text-align: center; position: fixed; top: 0px; left: 0px; right: 0px; bottom: 0px; margin: auto; z-index: 10; color: rgb(255, 255, 255);">
        <div class="uil-default-css">
            <div class="loader">Loading...</div>
        </div>
        <div class="resultLoading" style="display: block; font-size: 18px; font-weight: 300;">&nbsp;</div>
    </div>
    <div style="background: rgb(0, 0, 0); opacity: 0.6; width: 100%; height: 100%; position: absolute; top: 0px;"></div>
</div>

@if (Session["urserrole"].Equals(2) || Session["urserrole"].Equals(5))
{
    <div class="row">
        <div class="col-md-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <p class="card-title text-uppercase">
                        ALL TASKS
                        <span class="text-primary">
                            @Session["usernames"]
                        </span>
                    </p>
                    <div class="row">
                        <div class="col-12">
                            <div class="table-responsive">
                                <table id="example" class="display expandable-table" style="width:100%">
                                    <thead>
                                        <tr>
                                            <th>
                                                @Html.DisplayNameFor(model => model.TaskName)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.FeedBack)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.BodyContent)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.TaskStatus)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.TastStartTime)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.TaskEndTime)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.UnitTable.UnitName)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.UsersTable.Username)
                                            </th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {
                                            <tr>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.TaskName)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.FeedBack)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.BodyContent)
                                                </td>
                                                <td>
                                                    @if (item.TaskStatus == true)
                                                    {
                                                        <button class=" btn badge-success"> Complete</button>
                                                    }
                                                    else
                                                    {
                                                        <button class="btn badge-warning text-white">  Pending  </button>
                                                    }

                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.TastStartTime)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.TaskEndTime)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.UnitTable.UnitName)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.UsersTable.Username)
                                                </td>
                                                <td>
                                                    <a href="@Url.Action("Details", "Tasks", new { id = item.TaskId })" class="btn btn-inverse-success">
                                                        <i class="fa-solid fa-eye   "></i>

                                                    </a>




                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>

}
else
{
    <div class="card text-center  mt-100">
        <div class="card-header bg-danger text-white">Notification</div>
        <div class="card-body">
            <h5 class="card-title">NOT AUTHORISED</h5>
            <p class="card-text">  access denied</p>


        </div>
        <div class="card-footer text-muted"> <a href="@Url.Action("Index", "Home")" class="btn btn-outline-primary text-black"> <i class="fa-solid fa-house-circle-check"></i></a></div>
    </div>

}